name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # Create GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## ðŸš€ SkillPort Community ${{ github.ref }}
            
            ### âœ¨ New Features
            - Complete role-based authentication system
            - Real-time contest participation with WebSocket
            - Payment integration with Razorpay
            - Analytics and monitoring with Sentry
            - GDPR compliance features
            - Browser extension integration
            
            ### ðŸ”§ Improvements
            - Enhanced security with rate limiting
            - Performance optimizations
            - Better error handling and validation
            - Comprehensive documentation
            
            ### ðŸ“¦ What's Included
            - **Frontend**: Next.js 15 with TypeScript
            - **Backend**: Complete API with authentication
            - **Database**: PostgreSQL with Prisma ORM
            - **Payments**: Razorpay integration
            - **Analytics**: Google Analytics 4
            - **Monitoring**: Sentry error tracking
            - **Documentation**: Complete migration guides
            
            ### ðŸš€ Deployment
            - Docker support with docker-compose
            - CI/CD pipelines for automated deployment
            - Environment variable documentation
            - Database migration scripts
            
            ### ðŸ“š Documentation
            - [Migration Requirements](MIGRATION_REQUIREMENTS.md)
            - [Role Flows](ROLE_FLOWS.md)
            - [Project Status](PROJECT_STATUS_REPORT.md)
            - [API Documentation](ADMIN_API_DOCUMENTATION.md)
            
            ### ðŸ”— Links
            - **Repository**: https://github.com/${{ github.repository }}
            - **Issues**: https://github.com/${{ github.repository }}/issues
            - **Documentation**: See repository docs/
            
            ---
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...${{ github.ref }}
          draft: false
          prerelease: false

  # Build and upload release artifacts
  build-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: postgresql://user:pass@localhost:5432/db
          JWT_SECRET: test-secret
          NEXT_PUBLIC_APP_URL: https://skillport.com
          NEXT_PUBLIC_API_URL: https://skillport.com/api

      - name: Create production build archive
        run: |
          tar -czf skillport-community-${{ github.ref_name }}.tar.gz \
            .next/ \
            node_modules/ \
            package.json \
            package-lock.json \
            prisma/ \
            public/ \
            app/ \
            components/ \
            lib/ \
            middleware.ts \
            next.config.ts \
            tailwind.config.js \
            tsconfig.json \
            Dockerfile \
            docker-compose.yml \
            nginx.conf \
            *.md

      - name: Upload production build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./skillport-community-${{ github.ref_name }}.tar.gz
          asset_name: skillport-community-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Create Docker image archive
        run: |
          docker build -t skillport-community:${{ github.ref_name }} .
          docker save skillport-community:${{ github.ref_name }} | gzip > skillport-community-${{ github.ref_name }}.docker.tar.gz

      - name: Upload Docker image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./skillport-community-${{ github.ref_name }}.docker.tar.gz
          asset_name: skillport-community-${{ github.ref_name }}.docker.tar.gz
          asset_content_type: application/gzip

  # Publish to Docker Hub
  publish-docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            skillport/community:${{ github.ref_name }}
            skillport/community:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Publish to NPM (if applicable)
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: create-release
    if: false  # Disabled for now, enable if publishing as NPM package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Notify release
  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-release, publish-docker]
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#releases'
          text: |
            ðŸŽ‰ **SkillPort Community ${{ github.ref_name }} Released!**
            
            ðŸ“¦ **What's New:**
            - Complete role-based authentication
            - Real-time contest participation
            - Payment integration with Razorpay
            - Analytics and monitoring
            - GDPR compliance features
            
            ðŸ”— **Download:** https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}
            ðŸ“š **Documentation:** See repository docs/
            
            ðŸš€ **Ready for Production Deployment!**
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Discord
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ðŸŽ‰ **SkillPort Community ${{ github.ref_name }} Released!**
            
            **New Features:**
            - Complete authentication system
            - Real-time features
            - Payment integration
            - Analytics & monitoring
            - GDPR compliance
            
            **Download:** https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}
            
            ðŸš€ **Production Ready!**

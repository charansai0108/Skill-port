name: Dependency Updates

on:
  schedule:
    - cron: '0 4 * * 1'  # Weekly on Monday at 4 AM
  workflow_dispatch:

jobs:
  # Check for dependency updates
  check-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated packages
        run: |
          echo "# Dependency Update Report" > dependency-updates.md
          echo "Generated on: $(date)" >> dependency-updates.md
          echo "" >> dependency-updates.md
          echo "## Outdated Packages" >> dependency-updates.md
          echo "| Package | Current | Latest | Type |" >> dependency-updates.md
          echo "|---------|---------|--------|------|" >> dependency-updates.md
          npm outdated --json | jq -r 'to_entries[] | "| \(.key) | \(.value.current) | \(.value.latest) | \(.value.type) |"' >> dependency-updates.md

      - name: Check for security vulnerabilities
        run: |
          echo "" >> dependency-updates.md
          echo "## Security Vulnerabilities" >> dependency-updates.md
          npm audit --audit-level moderate --json > audit-results.json
          if [ -s audit-results.json ]; then
            echo "| Package | Severity | Description |" >> dependency-updates.md
            echo "|---------|----------|-------------|" >> dependency-updates.md
            jq -r '.vulnerabilities | to_entries[] | "| \(.key) | \(.value.severity) | \(.value.title) |"' audit-results.json >> dependency-updates.md
          else
            echo "No security vulnerabilities found." >> dependency-updates.md
          fi

      - name: Upload dependency report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-updates
          path: |
            dependency-updates.md
            audit-results.json

  # Create pull request for updates
  create-pr:
    name: Create Update PR
    runs-on: ubuntu-latest
    needs: check-updates
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update dependencies
        run: |
          # Update patch and minor versions
          npm update
          
          # Check for major version updates
          npx npm-check-updates -u
          
          # Install updated dependencies
          npm install

      - name: Run tests after update
        run: |
          npm run lint
          npm run test

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: '🔄 Automated Dependency Updates'
          body: |
            ## 🔄 Automated Dependency Updates
            
            This PR contains automated dependency updates for the SkillPort Community project.
            
            ### 📦 Updated Packages
            - Updated patch and minor versions
            - Checked for major version updates
            - All tests passing after updates
            
            ### ✅ Verification
            - [x] Linting passed
            - [x] Tests passed
            - [x] No breaking changes detected
            
            ### 🔍 Review Required
            Please review the changes and test thoroughly before merging.
            
            **Auto-generated by GitHub Actions**
          branch: dependency-updates
          delete-branch: true

  # Notify about updates
  notify-updates:
    name: Notify Updates
    runs-on: ubuntu-latest
    needs: [check-updates, create-pr]
    if: always()
    steps:
      - name: Download dependency report
        uses: actions/download-artifact@v3
        with:
          name: dependency-updates
          path: ./reports

      - name: Notify Slack about updates
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#dependencies'
          text: |
            🔄 **Weekly Dependency Update Report**
            
            📦 **Updates Available:**
            $(cat reports/dependency-updates.md)
            
            🔗 **View Full Report:** https://github.com/${{ github.repository }}/actions
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Security update alerts
  security-alerts:
    name: Security Alerts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for security vulnerabilities
        run: |
          npm audit --audit-level high --json > security-audit.json
          
          # Check if there are high/critical vulnerabilities
          VULNERABILITIES=$(jq '.vulnerabilities | length' security-audit.json)
          
          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "🚨 Security vulnerabilities detected: $VULNERABILITIES"
            echo "Creating security alert..."
            
            # Create issue for security vulnerabilities
            gh issue create \
              --title "🚨 Security Vulnerabilities Detected" \
              --body "High/critical security vulnerabilities found in dependencies. Please review and update immediately." \
              --label "security,urgent"
          else
            echo "✅ No high/critical security vulnerabilities found"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # License compliance check
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check license compliance
        run: |
          echo "# License Compliance Report" > license-report.md
          echo "Generated on: $(date)" >> license-report.md
          echo "" >> license-report.md
          
          # Check for problematic licenses
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense;CC0-1.0' --summary >> license-report.md
          
          # Generate full license report
          echo "" >> license-report.md
          echo "## Full License Report" >> license-report.md
          npx license-checker --summary >> license-report.md

      - name: Upload license report
        uses: actions/upload-artifact@v3
        with:
          name: license-report
          path: license-report.md

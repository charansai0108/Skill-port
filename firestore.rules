rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        (resource.data.role == 'community-admin' || 
         resource.data.role == 'mentor' || 
         resource.data.role == 'student');
    }
    
    // Communities collection - authenticated users can read, admins can write
    match /communities/{communityId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.admin || 
         request.auth.uid in resource.data.members);
      allow create: if request.auth != null;
    }
    
    // Contests collection - authenticated users can read, creators and admins can write
    match /contests/{contestId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || 
         request.auth.uid == resource.data.admin);
      allow create: if request.auth != null;
    }
    
    // Submissions collection - users can read/write their own submissions
    match /submissions/{submissionId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.contestAdmin);
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // Notifications collection - users can read their own notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // Admin collections - only admins can access
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'community-admin';
    }
    
    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
